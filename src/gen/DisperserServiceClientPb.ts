/**
 * @fileoverview gRPC-Web generated client stub for disperser
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.1
// source: disperser/disperser.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as disperser_disperser_pb from '../disperser/disperser_pb'; // proto import: "disperser/disperser.proto"


export class DisperserClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorDisperseBlob = new grpcWeb.MethodDescriptor(
    '/disperser.Disperser/DisperseBlob',
    grpcWeb.MethodType.UNARY,
    disperser_disperser_pb.DisperseBlobRequest,
    disperser_disperser_pb.DisperseBlobReply,
    (request: disperser_disperser_pb.DisperseBlobRequest) => {
      return request.serializeBinary();
    },
    disperser_disperser_pb.DisperseBlobReply.deserializeBinary
  );

  disperseBlob(
    request: disperser_disperser_pb.DisperseBlobRequest,
    metadata?: grpcWeb.Metadata | null): Promise<disperser_disperser_pb.DisperseBlobReply>;

  disperseBlob(
    request: disperser_disperser_pb.DisperseBlobRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.DisperseBlobReply) => void): grpcWeb.ClientReadableStream<disperser_disperser_pb.DisperseBlobReply>;

  disperseBlob(
    request: disperser_disperser_pb.DisperseBlobRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.DisperseBlobReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/disperser.Disperser/DisperseBlob',
        request,
        metadata || {},
        this.methodDescriptorDisperseBlob,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/disperser.Disperser/DisperseBlob',
    request,
    metadata || {},
    this.methodDescriptorDisperseBlob);
  }

  methodDescriptorGetBlobStatus = new grpcWeb.MethodDescriptor(
    '/disperser.Disperser/GetBlobStatus',
    grpcWeb.MethodType.UNARY,
    disperser_disperser_pb.BlobStatusRequest,
    disperser_disperser_pb.BlobStatusReply,
    (request: disperser_disperser_pb.BlobStatusRequest) => {
      return request.serializeBinary();
    },
    disperser_disperser_pb.BlobStatusReply.deserializeBinary
  );

  getBlobStatus(
    request: disperser_disperser_pb.BlobStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<disperser_disperser_pb.BlobStatusReply>;

  getBlobStatus(
    request: disperser_disperser_pb.BlobStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.BlobStatusReply) => void): grpcWeb.ClientReadableStream<disperser_disperser_pb.BlobStatusReply>;

  getBlobStatus(
    request: disperser_disperser_pb.BlobStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.BlobStatusReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/disperser.Disperser/GetBlobStatus',
        request,
        metadata || {},
        this.methodDescriptorGetBlobStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/disperser.Disperser/GetBlobStatus',
    request,
    metadata || {},
    this.methodDescriptorGetBlobStatus);
  }

  methodDescriptorRetrieveBlob = new grpcWeb.MethodDescriptor(
    '/disperser.Disperser/RetrieveBlob',
    grpcWeb.MethodType.UNARY,
    disperser_disperser_pb.RetrieveBlobRequest,
    disperser_disperser_pb.RetrieveBlobReply,
    (request: disperser_disperser_pb.RetrieveBlobRequest) => {
      return request.serializeBinary();
    },
    disperser_disperser_pb.RetrieveBlobReply.deserializeBinary
  );

  retrieveBlob(
    request: disperser_disperser_pb.RetrieveBlobRequest,
    metadata?: grpcWeb.Metadata | null): Promise<disperser_disperser_pb.RetrieveBlobReply>;

  retrieveBlob(
    request: disperser_disperser_pb.RetrieveBlobRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.RetrieveBlobReply) => void): grpcWeb.ClientReadableStream<disperser_disperser_pb.RetrieveBlobReply>;

  retrieveBlob(
    request: disperser_disperser_pb.RetrieveBlobRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: disperser_disperser_pb.RetrieveBlobReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/disperser.Disperser/RetrieveBlob',
        request,
        metadata || {},
        this.methodDescriptorRetrieveBlob,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/disperser.Disperser/RetrieveBlob',
    request,
    metadata || {},
    this.methodDescriptorRetrieveBlob);
  }

}

